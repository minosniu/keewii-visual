cmdhistory=[";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" ";; Switching to singleTarget.saveData namespace" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" ";; Switching to keewiiVisual.threads namespace" "(defn re-drawing [x]\\r\\n  (when true;@running\\r\\n     (send-off *agent* \#'re-drawing))\\r\\n   ;(.repaint panel)\\r\\n   (Thread/sleep animation-sleep-ms) nil)" "(defn re-drawing [x]\\r\\n  (when true;@running\\r\\n     (send-off *agent* \#'re-drawing))\\r\\n   ;(.repaint panel)\\r\\n   (Thread/sleep 16) nil)" "(defn re-drawing [x]\\r\\n  (when true;@running\\r\\n     (send-off *agent* \#'re-drawing))\\r\\n   ;(.repaint panel)\\r\\n   (Thread/sleep re-drawing-sleep-ms) nil)" "(defn re-drawing [x panel]\\r\\n  (when true;@running\\r\\n     (send-off *agent* \#'re-drawing))\\r\\n   (.repaint panel)\\r\\n   (Thread/sleep re-drawing-sleep-ms) nil)" "(send-off agent-drawing re-drawing)" "(def agent-udp (agent nil))" "(defn udp-receive []\\r\\n  (dosync\\r\\n    (let [time  (/ (- (now) @Time) 1000.0) ;in ms\\r\\n          MSG (receive-msg)\\r\\n          msg (map read-string (string/split MSG \#\\"\:\\"))\\n          EMG1 (second (rest msg))\\n          EMG2 (last msg)]\\r\\n      (reset\! F1 (first msg))\\r\\n      (reset\! F2 (second msg))\\n      (save-temp-data time EMG1 EMG2 @loop-count))))" "(send-off agent-udp udp-reception)" "(defn udp-reception [x]       \\r\\n  (when @running\\r\\n    (udp-receive)\\r\\n    (send-off *agent* \#'udp-reception) \\r\\n    nil))" "(send-off agent-udp udp-reception)" "(def agent-drawing (agent nil))" "(defn re-drawing [x panel]\\r\\n  (when true;@running\\r\\n     (send-off *agent* \#'re-drawing))\\r\\n   (.repaint panel)\\r\\n   (Thread/sleep re-drawing-sleep-ms) nil)" "(send-off agent-drawing (re-drawing panel))" "(send-off agent-drawing (re-drawing 2))" "(send-off agent-drawing (partial re-drawing panel))" "(send-off agent-drawing (partial re-drawing 2))" ";; Switching to singleTarget.core namespace" "(clojure.core/ns keewiiVisual.threads)\\n(defn re-drawing [x panel]\\r\\n  (when true;@running\\r\\n     (send-off *agent* \#'re-drawing))\\r\\n   (.repaint panel)\\r\\n   (Thread/sleep re-drawing-sleep-ms) nil)\\n(clojure.core/ns singleTarget.core)" ";; Switching to singleTarget.core namespace" ";; Switching to keewiiVisual.toolbox namespace" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to keewiiVisual.toolbox namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" "(clojure.core/ns singleTarget.displayGui)\\n(defn render-vowel-map [{is-polar \:is-polar} frame g]\\r\\n  (let [WIDTH (.getWidth frame) ;1382 in my laptop\\r\\n        HEIGHT (.getHeight frame) ;744 in my laptop\\r\\n        img (buffered-image WIDTH HEIGHT) \\r\\n        bg (.getGraphics img)\\r\\n        y (/ (* HEIGHT (- @F1 (formant_lim 0))) (- (formant_lim 1) (formant_lim 0))) \\r\\n        x (/ (* WIDTH (- (formant_lim 3) @F2)) (- (formant_lim 3) (formant_lim 2))) \\r\\n        VOWEL  @alphabet\\r\\n        x_pos (formant2pixel VOWEL WIDTH 2)\\r\\n        y_pos (formant2pixel VOWEL HEIGHT 1)\\r\\n        CHAR (VOWEL \:name)]\\r\\n    (doto bg\\r\\n      (.setColor (color \:white)) ;background\\r\\n      (.fillRect 0 0 (.getWidth img)  (.getHeight img)))\\r\\n    \\r\\n    (if @CUR_TGT_sleep\\r\\n      (doseq []  ;trial\\r\\n        (when is-polar\\r\\n          (doto bg\\r\\n            (.setColor (color \:green))\\r\\n            (.drawLine (/ WIDTH 2) (/ HEIGHT 2) x y)));only for polar coordinate\\r\\n        (doto bg\\r\\n          (.setColor (color \:blue)) ;blue square\\r\\n          (.fillRect (int (- x 10) )  (int (- y 10) )  20 20))\\r\\n        (doto bg\\r\\n          (. setFont Font)\\r\\n          (.setColor (color \:black))\\r\\n          (.drawString CHAR x_pos y_pos)))\\r\\n      (doto bg ; interval / relax status\\r\\n        (.setFont Font)\\r\\n        (.setColor (color \:black))\\r\\n        (if @running \\n          (.drawString (R \:name) \\r\\n            (formant2pixel R WIDTH 2);1700 \= actual position\\r\\n            (formant2pixel R HEIGHT 1))\\n          (.drawString (P \:name) \\r\\n            (formant2pixel P WIDTH 2)\\r\\n            (formant2pixel P HEIGHT 1)))\\n        )) \\r\\n    (.drawImage g img 0 0 nil)\\r\\n    (.dispose bg)))\\n(clojure.core/ns singleTarget.core)" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" ";; Switching to singleTarget.core namespace" ";; Switching to free.core namespace" "(+ 2 2\\n   )" "(cur_dir)" "(def cur_sub (str (cur_dir) \\"\\\\\\\\JAB\\"))\\r\\n\\r\\n(def dir_cart (str (cur_sub) \\"\\\\\\\\Cart\\\\\\\\dat\\"))\\r\\n(def dir_polar (str (cur_sub) \\"\\\\\\\\Polar\\\\\\\\dat\\"))\\r\\n\\r\\n\\r\\n(slurp \\"01.dat\\")" "dir_cart" "cur_sub" "dir_cart" "cur_sub" "dir_cart" "dir_polar" "temp" "(string/split temp \\"\\\\n\\")" "(string/split temp \#\\"\\\\n\\")" "(temp 1)" "(temp 2)" "(def temp1 (string/split temp \#\\"\\\\t\\"))" "(file-seq dir_cart)" "(slurp (files_cart 1))" "(slurp (clojure.java.io/reader (files_cart 1)))" "(files_cart 1)" "(files_cart)" "files_cart" "(take 10 files_cart)" "(def dd (take 2 files_cart))" "dd" "(dd 1)" "(io/file files_cart)" "(. io/file cur_sub)" "(. io/file files_cart)" "(.getNames files_cart)" "(.getName files_cart)" "(. io/getName files_cart)" "(rest [2 3 4])" "temp" "(temp 1)" "temp" "(assoc-in temp [])" "(assoc-in temp)" "temp" "(into-array temp)" "temp" "(def dd (vec (into-array temp)) )" "dd" "temp" "(temp 1\\n      )" "temp" "(take 1 files_cart)" "(File. (take 1 files_cart))" "(io/as-file (take 1 files_cart))" "(getName (take 1 files_cart))" "(.getName (take 1 files_cart))" "(defn my-ls [d]\\r\\n  (println \\"Files in \\" (.getName d))\\r\\n  (doseq [f (.listFiles d)]\\r\\n    (if (.isDirectory f)\\r\\n      (print \\"d \\")\\r\\n      (print \\"- \\"))\\r\\n    (println (.getName f))))" "(my-ls (File. \\".\\"))" "(slurp (File. temp))" "(slurp (File. (take 1 temp)))" "(temp 1)" "(slurp (File. (take 1 files_cart)))" "files_cart" "(split files_cart)" "(string/split files_cart)" "(string/split files_cart \#\\"\\\\s\\")" "(files_cart 1)" "(files_cart 2)" "(take 2 files_cart)" "files_cart" "(.getName files_cart)" "(.listfiles (io.file dir_cart))" "(.listfiles (io/file dir_cart))" "(.listFiles (io/file dir_cart))" "(def dd (.listFiles (io/file dir_cart)))" "dd" "(ListFiles dir_cart)" "(ListFiles files_cart)" "(ListFiles dir_cart)" "(ListFiles files_cart)" "(ListFiles dir_cart)" "((ListFiles dir_cart) 1)" "filelist_cart" "filelist_polar" "(str dir-cart (filelist-cart 1\\n                            ))" "(string/split (slurp (str dir-cart (filelist-cart 1))) \#\\"\\\\n\\")" "(for  [file filelist-cart] (print file))" "filelist-cart" "(filelist-cart 1)" "(formant-data-load (str dir-cart (filelist-cart 1))" "(formant-data-load (str dir-cart (filelist-cart 1)))" "wavedata-info" "(KTH-operator true)" "(keewiiVisual.udp send-msg)" "(keewiiVisual.udp.send-msg )" "(keewiiVisual.udp/send-msg )" "(send-msg \\"500\:1100\:1\:1\\")" "(keewiiVisual.udp/send-msg \\"500\:1100\:1\:1\\")" "(keewiiVisual.udp/send-msg)" "(defn send-msg [ip port]\\r\\n\\t(let [send-socket (DatagramSocket. 9002)]\\r\\n\\t     (fn [data] (send-data send-socket ip port data))))" "(defn keewiiVisual.udp/send-msg [ip port]\\r\\n\\t(let [send-socket (DatagramSocket. 9002)]\\r\\n\\t     (fn [data] (send-data send-socket ip port data))))" "(send-msg \\"500\:1100\:1\:1\\")" "(keewiiVisual.udp/send-msg \\"500\:1100\:1\:1\\")" "(defn make-socket \\r\\n\\t([] (new DatagramSocket))\\r\\n\\t([port] (new DatagramSocket port)))" "(import (java.net DatagramPacket DatagramSocket InetAddress))" "(defn make-socket \\r\\n\\t([] (new DatagramSocket))\\r\\n\\t([port] (new DatagramSocket port)))" "(defn make-receive [receive-port]\\r\\n\\t(let [receive-socket (make-socket receive-port)]\\r\\n\\t\\t(fn [] (receive-data receive-socket))))\\r\\n\\r\\n(defn make-send [ip port]\\r\\n\\t(let [send-socket (make-socket)]\\r\\n\\t     (fn [data] (send-data send-socket ip port data))))" "(defn send-data [send-socket ip port data]\\r\\n  (let [ipaddress (InetAddress/getByName ip),\\r\\n        send-packet (new DatagramPacket (.getBytes data) (.length data) ipaddress port)]\\r\\n  (.send send-socket send-packet)))" "(defn make-send [ip port]\\r\\n\\t(let [send-socket (make-socket)]\\r\\n\\t     (fn [data] (send-data send-socket ip port data))))" "(def send-msg (make-send \\"localhost\\" 9002))" "(send-msg \\"500\:1100\:1\:1\\")" "(send-msg \\"500\:1100\:1000\:1\\")" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 1))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 0))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 1))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 0))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 1))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 2\\n                                                             ))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 1))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 3))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 4))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 5))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 6))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 7))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 8))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 9))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 10))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 11))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 12))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 13))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 14))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 15))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 16))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 17))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 18))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 19))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 20))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 21))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 22))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 23\\n                                                             ))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 24))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 25))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 0))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 1))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 2))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 3))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 4))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 5))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 6))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 7))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 8))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 9))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 10))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 11))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 12))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 13))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 14))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 15))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 16))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 17))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 18))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 19))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 20))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 21))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 22))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 23))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 24))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 0))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 1))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 2))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 3))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 4))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 5))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 6))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 7))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 8))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 9))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 10))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 11))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 12))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 13))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 14))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 15))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 16))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 17))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 18))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 19))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 20))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 21))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 22))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 23))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 24))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 0))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 1))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 2))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 3))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 4))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 5))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 6))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 7))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 8))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 9))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 10))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 11))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 12))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 13))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 14))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 15))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 16))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 17))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 18))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 19))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 20))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 21))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 22))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 23))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 24))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 0))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 8))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 0))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 1))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 2))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 3))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 4))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 5))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 6))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 7))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 8))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 9))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 10))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 11))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 12))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 13))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 14))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 15))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 16))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 17))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 18))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 19))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 20))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 21))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 22))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 23))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 24))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 0))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 1))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 2))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 3))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 4))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 5))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 6))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 7))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 8))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 9))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 10))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 11))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 12))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 13))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 14))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 15))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 16))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 17))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 18))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 19))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 20))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 21))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 22))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 23))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 24))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 0))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 1))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 2))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 3))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 4))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 5))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 6))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 7))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 8))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 9))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 10))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 11))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 12))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 13))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 14))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 15))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 16))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 17))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 18))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 19))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 20))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 21))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 22))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 23))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 24))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 0))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 1))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 2))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 3))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 4))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 5))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 6))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 7))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 8))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 9))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 10))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 11))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 12))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 13))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 14))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 15))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 16))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 17))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 18))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 19))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 20))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 21))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 22))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 23))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 24))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 0))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 1))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 2))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 3))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 4))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 5))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 6))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 7))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 8))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 9))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 10))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 11))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 12))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 13)))\\n             )" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 13))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 14))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 15))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 16))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 17))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 18))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 19))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 20))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 21))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 22))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 23))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 24))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 0))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 1))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 2))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 3))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 4))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 5))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 6))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 7))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 8))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 9))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 10))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 11))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 12))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 13))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 14))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 15))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 16))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 17))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 18))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 19))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 20))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 21))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 22))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 23))))" "(wavdata2udp (formant-data-load (str dir-polar (filelist-cart 24))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 0\\n                                                             ))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 8))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 1\\n                                                             ))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 0\\n                                                             ))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 0))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 1))))" "(wavdata2udp (formant-data-load (str dir-cart (filelist-cart 2))))"]
eclipse.preferences.version=1
